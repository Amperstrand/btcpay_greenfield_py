# coding: utf-8

"""
    BTCPay Greenfield API

    A full API to use your BTCPay Server

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from btcpay_greenfield_py.api.store_wallet_on_chain_api import StoreWalletOnChainApi


class TestStoreWalletOnChainApi(unittest.TestCase):
    """StoreWalletOnChainApi unit test stubs"""

    def setUp(self) -> None:
        self.api = StoreWalletOnChainApi()

    def tearDown(self) -> None:
        pass

    def test_store_on_chain_wallets_add_or_update_on_chain_wallet_link(self) -> None:
        """Test case for store_on_chain_wallets_add_or_update_on_chain_wallet_link

        Add/Update store on-chain wallet object link
        """
        pass

    def test_store_on_chain_wallets_add_or_update_on_chain_wallet_objects(self) -> None:
        """Test case for store_on_chain_wallets_add_or_update_on_chain_wallet_objects

        Add/Update store on-chain wallet objects
        """
        pass

    def test_store_on_chain_wallets_create_on_chain_transaction(self) -> None:
        """Test case for store_on_chain_wallets_create_on_chain_transaction

        Create store on-chain wallet transaction
        """
        pass

    def test_store_on_chain_wallets_get_on_chain_fee_rate(self) -> None:
        """Test case for store_on_chain_wallets_get_on_chain_fee_rate

        Get store on-chain wallet fee rate
        """
        pass

    def test_store_on_chain_wallets_get_on_chain_wallet_object(self) -> None:
        """Test case for store_on_chain_wallets_get_on_chain_wallet_object

        Get store on-chain wallet object
        """
        pass

    def test_store_on_chain_wallets_get_on_chain_wallet_objects(self) -> None:
        """Test case for store_on_chain_wallets_get_on_chain_wallet_objects

        Get store on-chain wallet objects
        """
        pass

    def test_store_on_chain_wallets_get_on_chain_wallet_receive_address(self) -> None:
        """Test case for store_on_chain_wallets_get_on_chain_wallet_receive_address

        Get store on-chain wallet address
        """
        pass

    def test_store_on_chain_wallets_get_on_chain_wallet_transaction(self) -> None:
        """Test case for store_on_chain_wallets_get_on_chain_wallet_transaction

        Get store on-chain wallet transaction
        """
        pass

    def test_store_on_chain_wallets_get_on_chain_wallet_utxos(self) -> None:
        """Test case for store_on_chain_wallets_get_on_chain_wallet_utxos

        Get store on-chain wallet UTXOS
        """
        pass

    def test_store_on_chain_wallets_patch_on_chain_wallet_transaction(self) -> None:
        """Test case for store_on_chain_wallets_patch_on_chain_wallet_transaction

        Patch store on-chain wallet transaction info
        """
        pass

    def test_store_on_chain_wallets_remove_on_chain_wallet_link(self) -> None:
        """Test case for store_on_chain_wallets_remove_on_chain_wallet_link

        Remove store on-chain wallet object links
        """
        pass

    def test_store_on_chain_wallets_remove_on_chain_wallet_object(self) -> None:
        """Test case for store_on_chain_wallets_remove_on_chain_wallet_object

        Remove store on-chain wallet objects
        """
        pass

    def test_store_on_chain_wallets_show_on_chain_wallet_overview(self) -> None:
        """Test case for store_on_chain_wallets_show_on_chain_wallet_overview

        Get store on-chain wallet overview
        """
        pass

    def test_store_on_chain_wallets_show_on_chain_wallet_transactions(self) -> None:
        """Test case for store_on_chain_wallets_show_on_chain_wallet_transactions

        Get store on-chain wallet transactions
        """
        pass

    def test_store_on_chain_wallets_un_reserve_on_chain_wallet_receive_address(self) -> None:
        """Test case for store_on_chain_wallets_un_reserve_on_chain_wallet_receive_address

        UnReserve last store on-chain wallet address
        """
        pass


if __name__ == '__main__':
    unittest.main()

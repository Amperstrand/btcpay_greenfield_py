# coding: utf-8

"""
    BTCPay Greenfield API

    A full API to use your BTCPay Server

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from btcpay_greenfield_py.models.create_on_chain_transaction_request import CreateOnChainTransactionRequest

class TestCreateOnChainTransactionRequest(unittest.TestCase):
    """CreateOnChainTransactionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateOnChainTransactionRequest:
        """Test CreateOnChainTransactionRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateOnChainTransactionRequest`
        """
        model = CreateOnChainTransactionRequest()
        if include_optional:
            return CreateOnChainTransactionRequest(
                destinations = [
                    btcpay_greenfield_py.models.create_on_chain_transaction_request_destination.CreateOnChainTransactionRequestDestination(
                        destination = '', 
                        amount = '', 
                        subtract_from_amount = True, )
                    ],
                feerate = 1.337,
                proceed_with_payjoin = True,
                proceed_with_broadcast = True,
                no_change = True,
                rbf = True,
                exclude_unconfirmed = True,
                selected_inputs = [
                    ''
                    ]
            )
        else:
            return CreateOnChainTransactionRequest(
        )
        """

    def testCreateOnChainTransactionRequest(self):
        """Test CreateOnChainTransactionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
